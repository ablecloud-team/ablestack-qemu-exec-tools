name: Build and Release ablestack-qemu-exec-tools

on:
  push:
    tags:
      - "v*"

jobs:
  build-rpm:
    runs-on: ubuntu-latest
    container:
      image: rockylinux:9
      options: --user 0
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install build dependencies
        run: dnf -y install make rpm-build tar git

      - name: Build RPM
        run: make rpm

      - uses: actions/upload-artifact@v4
        with:
          name: rpm-package
          path: rpmbuild/RPMS/**

  build-deb:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential make dpkg-dev debhelper git

      - name: Build DEB
        run: make deb

      - uses: actions/upload-artifact@v4
        with:
          name: deb-package
          path: build/deb/*.deb

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install WiX v4
        run: dotnet tool install --global wix --version 4.*

      - name: Add dotnet tools to PATH
        shell: pwsh
        run: echo "$env:USERPROFILE\.dotnet\tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build MSI
        shell: pwsh
        run: make windows

      - uses: actions/upload-artifact@v4
        with:
          name: msi-package
          path: windows/msi/out/*


  release:
    needs: [build-rpm, build-deb, build-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Collect artifacts into structured dirs
        run: |
          mkdir -p release/rpm release/deb release/msi
          # rpm
          find dist -type f -name "*.rpm" -exec cp {} release/rpm/ \;
          # deb
          find dist -type f -name "*.deb" -exec cp {} release/deb/ \;
          # msi + wixpdb + cab
          find dist -type f -path "*/msi-package/*" -exec cp {} release/msi/ \;

          echo "Release directory structure:"
          tree release || ls -R release

      - name: Create README.txt for ISO
        run: |
          cat <<'EOF' > release/README.txt
          ablestack-qemu-exec-tools 패키지 모음 ISO
          ==========================================
          이 ISO에는 다음과 같은 패키지가 포함되어 있습니다:

          - RPM (RHEL/Rocky/Alma 계열): rpm/ 디렉토리
          - DEB (Ubuntu/Debian 계열): deb/ 디렉토리
          - MSI (Windows): msi/ 디렉토리

          설치 방법은 INSTALL.md를 참고하세요:
          https://github.com/ablecloud-team/ablestack-qemu-exec-tools/blob/main/INSTALL.md

          릴리즈 버전: ${GITHUB_REF##*/}
          EOF

      - name: Generate ISO
        run: |
          sudo apt-get update && sudo apt-get install -y genisoimage
          VERSION=${GITHUB_REF##*/}
          mkisofs -o release/ablestack-qemu-exec-tools-${VERSION}.iso \
            -V "ablestack-qemu-exec-tools ${VERSION}" \
            release/
          ls -lh release

      - name: Generate Release Notes
        id: notes
        run: |
          TAG_NAME=${GITHUB_REF##*/}
          VERSION=${TAG_NAME#v}
          if [ -f CHANGELOG.md ]; then
            NOTES=$(awk -v ver="## [$VERSION]" '
              $0 ~ ver {flag=1; next}
              /^## / && flag {flag=0}
              flag {print}
            ' CHANGELOG.md)
            if [ -n "$NOTES" ]; then
              echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
              echo "## $TAG_NAME" >> $GITHUB_ENV
              echo "$NOTES" >> $GITHUB_ENV
              echo "EOF" >> $GITHUB_ENV
              exit 0
            fi
          fi
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$PREV_TAG" ]; then
            NOTES=$(git log --oneline $PREV_TAG..HEAD)
          else
            NOTES=$(git log --oneline)
          fi
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "## $TAG_NAME" >> $GITHUB_ENV
          echo "$NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ env.RELEASE_NOTES }}
          files: release/*
