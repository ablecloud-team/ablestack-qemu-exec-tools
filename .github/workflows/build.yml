name: Build and Release ablestack-qemu-exec-tools

on:
  push:
    tags:
      - "v*"

jobs:
  build-rpm:
    runs-on: ubuntu-latest
    container:
      image: rockylinux:9
      options: --user 0
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install build dependencies
        run: dnf -y install make rpm-build tar git

      - name: Build RPM
        run: make rpm

      - uses: actions/upload-artifact@v4
        with:
          name: rpm-package
          path: build/rpm/*.rpm   # 수정됨

  build-deb:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential make dpkg-dev debhelper git

      - name: Build DEB
        run: make deb

      - uses: actions/upload-artifact@v4
        with:
          name: deb-package
          path: build/deb/*.deb   # 유지됨

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install WiX v4
        run: dotnet tool install --global wix --version 4.*

      - name: Add dotnet tools to PATH
        shell: pwsh
        run: echo "$env:USERPROFILE\.dotnet\tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build MSI
        shell: pwsh
        run: make windows

      - uses: actions/upload-artifact@v4
        with:
          name: msi-package
          path: build/msi/*   # 수정됨

  release:
    needs: [build-rpm, build-deb, build-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Prepare directory structure
        run: |
          mkdir -p release/rpm/Packages release/deb/pool release/msi
          echo "Directory structure prepared."

      # ---------- RPM: RHEL 컨테이너 내부에서 ----------
      - name: Generate RPM repo with dependencies
        uses: addnab/docker-run-action@v3
        with:
          image: rockylinux:9
          options: --user 0 -v ${{ github.workspace }}:/workspace
          run: |
            cd /workspace
            dnf -y install dnf-plugins-core createrepo_c
            find dist -type f -name "*.rpm" -exec cp {} release/rpm/Packages/ \;
            for pkg in release/rpm/Packages/*.rpm; do
              dnf download --resolve "$pkg" --destdir release/rpm/Packages || true
            done
            createrepo_c release/rpm
            echo "[INFO] RPM repo created successfully."

      # ---------- DEB: Ubuntu 환경에서 ----------
      - name: Generate DEB repo with dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-rdepends dpkg-dev
          find dist -type f -name "*.deb" -exec cp {} release/deb/pool/ \;
          cd release/deb/pool
          for pkg in *.deb; do
            PKGNAME=$(dpkg-deb -f "$pkg" Package)
            apt-rdepends "$PKGNAME" | grep -v "^ " | xargs -n1 apt-get download || true
          done
          cd ../..
          mkdir -p release/deb/dists/stable/main/binary-amd64
          dpkg-scanpackages release/deb/pool /dev/null | gzip -9c > release/deb/dists/stable/main/binary-amd64/Packages.gz
          echo "[INFO] DEB repo created successfully."

      # --- Windows MSI ---
      - name: Collect Windows MSI
        run: |
          find dist -type f -path "*/msi-package/*" -exec cp {} release/msi/ \;

      # --- README.txt 생성 ---
      - name: Create README.txt for ISO
        run: |
          cat <<'EOF' > release/README.txt
          ablestack-qemu-exec-tools 패키지 모음 ISO
          ==========================================
          이 ISO에는 다음과 같은 패키지가 포함되어 있습니다:

          - RPM (RHEL/Rocky/Alma 계열): rpm/ 디렉토리 (repo 구성 완료)
            사용법:
              mount -o loop ablestack-qemu-exec-tools-<VERSION>.iso /mnt
              dnf config-manager --add-repo file:///mnt/rpm
              dnf install ablestack-qemu-exec-tools

          - DEB (Ubuntu/Debian 계열): deb/ 디렉토리 (repo 구성 완료)
            사용법:
              mount -o loop ablestack-qemu-exec-tools-<VERSION>.iso /mnt
              echo "deb [trusted=yes] file:///mnt/deb stable main" | sudo tee /etc/apt/sources.list.d/ablestack.list
              apt update
              apt install ablestack-qemu-exec-tools

          - MSI (Windows): msi/ 디렉토리
            사용법:
              msi/ 디렉토리 안의 .msi 파일 실행

          릴리즈 버전: ${GITHUB_REF##*/}
          EOF

      - name: Add install-linux.sh
        run: |
          cat > release/install-linux.sh <<'EOF'
          #!/usr/bin/env bash
          set -e

          ISO_MNT=$(dirname "$0")

          echo "[INFO] ABLESTACK QEMU Exec Tools Installer"
          echo "[INFO] Detecting distribution type..."

          if [ -f /etc/os-release ]; then
              . /etc/os-release
              DISTRO=$ID
          else
              echo "[ERROR] Cannot detect distribution!"
              exit 1
          fi

          case "$DISTRO" in
              rocky|rhel|centos|almalinux|fedora)
                  echo "[INFO] Detected RPM-based system ($DISTRO $VERSION_ID)"

                  REPO_FILE=/etc/yum.repos.d/ablestack-qemu-exec-tools.repo
                  cat <<EOR | sudo tee $REPO_FILE >/dev/null
          [ablestack-qemu-exec-tools]
          name=ablestack-qemu-exec-tools
          baseurl=file://$ISO_MNT/rpm
          enabled=1
          gpgcheck=0
          EOR

                  sudo dnf clean all
                  sudo dnf -y install ablestack-qemu-exec-tools
                  echo "[INFO] Installation complete (RPM)."
                  ;;

              ubuntu|debian)
                  echo "[INFO] Detected DEB-based system ($DISTRO $VERSION_ID)"

                  LIST_FILE=/etc/apt/sources.list.d/ablestack-qemu-exec-tools.list
                  echo "deb [trusted=yes] file://$ISO_MNT/deb stable main" | sudo tee $LIST_FILE >/dev/null

                  sudo apt-get update
                  sudo apt-get -y install ablestack-qemu-exec-tools
                  echo "[INFO] Installation complete (DEB)."
                  ;;

              *)
                  echo "[ERROR] Unsupported distribution: $DISTRO"
                  exit 1
                  ;;
          esac

          exit 0
          EOF

          chmod +x release/install-linux.sh

      # --- ISO 생성 ---
      - name: Generate ISO
        run: |
          sudo apt-get update && sudo apt-get install -y genisoimage
          VERSION=${GITHUB_REF##*/}
          mkisofs -o release/ablestack-qemu-exec-tools-${VERSION}.iso \
            -V "ablestack-qemu-exec-tools ${VERSION}" \
            release/
          ls -lh release

      # --- Release Notes 생성 ---
      - name: Generate Release Notes
        id: notes
        run: |
          TAG_NAME=${GITHUB_REF##*/}
          VERSION=${TAG_NAME#v}
          if [ -f CHANGELOG.md ]; then
            NOTES=$(awk -v ver="## [$VERSION]" '
              $0 ~ ver {flag=1; next}
              /^## / && flag {flag=0}
              flag {print}
            ' CHANGELOG.md)
            if [ -n "$NOTES" ]; then
              echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
              echo "## $TAG_NAME" >> $GITHUB_ENV
              echo "$NOTES" >> $GITHUB_ENV
              echo "EOF" >> $GITHUB_ENV
              exit 0
            fi
          fi
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$PREV_TAG" ]; then
            NOTES=$(git log --oneline $PREV_TAG..HEAD)
          else
            NOTES=$(git log --oneline)
          fi
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "## $TAG_NAME" >> $GITHUB_ENV
          echo "$NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # --- GitHub Release ---
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ env.RELEASE_NOTES }}
          files: release/*
